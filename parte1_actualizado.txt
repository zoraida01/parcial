CREATE TABLESPACE mid_term DATAFILE 
'C:\mid_term\zoraida.dbf' SIZE 35M;
............................................
CREATE PROFILE examen LIMIT 
  SESSIONS_PER_USER                 1  
  IDLE_TIME                        15   
  FAILED_LOGIN_ATTEMPTS             1 ;  
..............................................  
CREATE USER ejercicios
IDENTIFIED BY zoraida
DEFAULT TABLESPACE mid_term
QUOTA UNLIMITED ON mid_term
PROFILE examen; 
GRANT DBA TO ejercicios;
GRANT CONNECT TO ejercicios;
......................................
CREATE TABLE EJERCICIOS.ORDERS(
ID NUMBER(*,0) NOT NULL PRIMARY KEY,
AMOUNT NUMBER(8,2),
ORDER_DATE DATE,
CUSTOMER_ID NUMBER(*,0),
SALESMAN_ID NUMBER(*,0),

CONSTRAINT CUSTOMER_ID_FK_ORDERS
FOREIGN KEY (CUSTOMER_ID)
REFERENCES CUSTOMERS(ID),

CONSTRAINT SALESMAN_ID_FK_ORDERS
FOREIGN KEY (SALESMAN_ID)
REFERENCES SALESMAN(ID));

........................................
CREATE TABLE EJERCICIOS.CUSTOMERS(
ID NUMBER(*,0) NOT NULL PRIMARY KEY,
NAME VARCHAR2(255),
CITY VARCHAR2(255),
GRADE NUMBER(*,0),
SALESMAN_ID NUMBER(*,0),

CONSTRAINT SALESMAN_ID_FK_CUSTOMERS
FOREIGN KEY (SALESMAN_ID)
REFERENCES SALESMAN(ID));
..........................................
CREATE TABLE EJERCICIOS.SALESMAN(
ID NUMBER(*,0) NOT NULL PRIMARY KEY,
NAME VARCHAR2(255),
CITY VARCHAR2(255),
COMMISSION NUMBER(5,2);

...............................

CREATE OR REPLACE VIEW "EJERCICIOS"."VIEW_2" ("ORDERS_ID", "ORDERS_ORDER_DATE", "ORDERS_AMOUNT", "CUSTOMERS_ID", "CUSTOMERS_NAME", "SALES_ID", "SALESMAN_NAME", "SALESMAN_COMMISSION") AS 
  SELECT ORDERS.ID AS ORDERS_ID, ORDERS.ORDER_DATE AS ORDERS_ORDER_DATE, ORDERS.AMOUNT AS ORDERS_AMOUNT,
CUSTOMERS.ID AS CUSTOMERS_ID, CUSTOMERS.NAME AS CUSTOMERS_NAME, SALESMAN.ID AS SALES_ID,
SALESMAN.NAME AS SALESMAN_NAME, SALESMAN.COMMISSION AS SALESMAN_COMMISSION
    
FROM ORDERS INNER JOIN CUSTOMERS ON ORDERS.CUSTOMER_ID = CUSTOMERS.ID INNER JOIN SALESMAN ON ORDERS.SALESMAN_ID = SALESMAN.ID

.........................................
CREATE OR REPLACE VIEW "EJERCICIOS"."VIEW_3" ("CUSTOMERS_ID", "CUSTOMERS_NAME", "SALESMAN_ID", "SALESMAN_NAME") AS 
  SELECT CUSTOMERS.ID AS CUSTOMERS_ID, CUSTOMERS.NAME AS CUSTOMERS_NAME, SALESMAN.ID AS SALESMAN_ID,
       SALESMAN.NAME AS SALESMAN_NAME
    
FROM CUSTOMERS LEFT OUTER JOIN SALESMAN ON CUSTOMERS.SALESMAN_ID= SALESMAN.ID 
  

WHERE (CUSTOMERS.GRADE <300) AND (SALESMAN.ID IS NULL) OR (SALESMAN.ID IS NOT NULL)

ORDER BY CUSTOMERS.GRADE ASC
;


